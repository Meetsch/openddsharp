diff --git a/dds/DCPS/DataReaderImpl.cpp b/dds/DCPS/DataReaderImpl.cpp
index 383032dce..7ffb37dd9 100644
--- a/dds/DCPS/DataReaderImpl.cpp
+++ b/dds/DCPS/DataReaderImpl.cpp
@@ -127,13 +127,6 @@ DataReaderImpl::~DataReaderImpl()
 {
   DBG_ENTRY_LVL("DataReaderImpl","~DataReaderImpl",6);
 
-#ifndef OPENDDS_NO_OWNERSHIP_KIND_EXCLUSIVE
-  OwnershipManagerPtr owner_manager = this->ownership_manager();
-  if (owner_manager) {
-    owner_manager->unregister_reader(topic_servant_->type_name(), this);
-  }
-#endif
-
 }
 
 // this method is called when delete_datareader is called.
@@ -145,6 +138,22 @@ DataReaderImpl::cleanup()
   // deleted
   set_listener(0, NO_STATUS_MASK);
 
+#ifndef OPENDDS_NO_OWNERSHIP_KIND_EXCLUSIVE
+  OwnershipManagerPtr owner_manager = this->ownership_manager();
+  if (owner_manager) {
+  owner_manager->unregister_reader(topic_servant_->type_name(), this);
+  }
+#endif
+
+  topic_servant_ = 0;
+
+#ifndef OPENDDS_NO_CONTENT_FILTERED_TOPIC
+  content_filtered_topic_ = 0;
+#endif
+
+#ifndef OPENDDS_NO_MULTI_TOPIC
+  multi_topic_ = 0;
+#endif
 
 }
 
@@ -194,6 +203,13 @@ void DataReaderImpl::init(
   }
 }
 
+void
+DataReaderImpl::LivelinessTimer::check_liveliness()
+{
+  CheckLivelinessCommand c(this);
+  execute_or_enqueue(c);
+}
+
 DDS::InstanceHandle_t
 DataReaderImpl::get_instance_handle()
 {
@@ -3143,6 +3159,14 @@ DataReaderImpl::get_cf_topic() const
 }
 #endif
 
+#ifndef OPENDDS_NO_MULTI_TOPIC
+void
+DataReaderImpl::enable_multi_topic(MultiTopicImpl* mt)
+{
+  multi_topic_ = mt;
+}
+#endif
+
 #ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
 
 void
